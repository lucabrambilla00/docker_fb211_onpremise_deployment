---
  - name : get postgres container ID
    shell: docker ps --no-trunc | grep psql | awk -F' ' '{print $1}'
    register : psql_ID

  - name: check if psql is open for accept connections
    wait_for:
      path: /var/lib/docker/containers/{{ psql_ID.stdout }}/{{ psql_ID.stdout }}-json.log
      search_regex: database system is ready to accept connections
      timeout: 60

  - name: create farbooking service
    docker_swarm_service:
      name: farbooking
      image: "{{ farbooking_image }}"
      placement:
        constraints:
          - "node.hostname=={{ groups['docker_nodes'][0] }}"
      limits:
        cpus: '0.5'
        memory: 3000M
      replicas: 1
      networks:
        - farbooking-network
      env:
        POSTGRES_USERNAME: "{{ farbooking }}"
        POSTGRES_PASSWORD: "{{ farbooking }}"
        CONNECTION_URL: "psql"
        MAX_POOL_SIZE: "500"
        JAVA_OPTS: "-Xms64m -Xmx2048m -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=256m -Djava.net.preferIPv4Stack=true -XX:+UseG1GC -server -XX:+UseStringCache -XX:+UseStringDeduplication"
      mounts:
        - source: farbooking_data
          target: /opt/jboss/wildfly/standalone/deployments
          type: volume
          driver_config:
            name: local
            options:
              type: none
              device: "/swarm/farbooking/data"
              o: bind
######### add comment line

      